version: '3.8'

services:
  movie-service:
    container_name: movie_service
    build: .
    env_file: 
      - .env
    ports:
      - "${GRPC_PORT}:${GRPC_PORT}"
      - "${HTTP_PORT}:${HTTP_PORT}"
    healthcheck:
      test: ["CMD", "grpc_health_probe", "-addr=movie-service:${GRPC_PORT}"]
      interval: 45s
      timeout: 5s
      retries: 3
    depends_on:
      - postgres
    networks:
      - backend
    restart: unless-stopped

  postgres:
    container_name: postgres_container
    image: postgres:17.4-bookworm
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-p", "${POSTGRES_PORT}", "-h", "postgres"]
      interval: 1m30s
      timeout: 30s
      retries: 5    
    networks:
      - backend
    restart: unless-stopped


  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/postgres
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - backend
    restart: unless-stopped


networks:
  backend:
    driver: bridge

volumes:
  pgadmin:
